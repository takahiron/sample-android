name: deploy to deploygate

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        description: which one do you use?
        options:
          - RELEASE
          - DEBUG
      version_name:
        type: string
        required: true
        description: release version name
      version_code:
        type: number
        required: true
        description: release version code

env:
  ENVIRONMENT: ${{ inputs.environment }}
  VERSION_NAME: ${{ inputs.version_name }}
  VERSION_CODE: ${{ inputs.version_code }}
  RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
  RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
  RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#      - uses: actions/checkout@v1
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
  environment:
    runs-on: ubuntu-latest
    outputs:
      GRADLE: ${{steps.setting-env.outputs.env}}
      SECRET: ${{steps.setting-env.outputs.SECRET}}
    steps:
      - run: echo "VERSION_NAME=22222.2"
      - name: debug
        if: ${{ inputs.environment == 'DEBUG' }}
        run: echo "ENV_1=assembleDebug" >> $GITHUB_ENV
      - name: release
        if: ${{ inputs.environment == 'RELEASE' }}
        run: echo "ENV_1=assembleRelease" >> $GITHUB_ENV
      - name: setting env
        id: setting-env
        run: |
          echo "env=$ENV_1" >> $GITHUB_OUTPUT
          echo "SECRET=${{ secrets.RELEASE_SECRET_KEY }}"  >> $GITHUB_OUTPUT
          echo "$env"
          echo "$SECRET" > ./aaaa.txt
          echo ls -alh
          echo cat aaaa.txt
#          echo "SECRET=${{ secrets.RELEASE_SECRET_KEY }}"  >> $GITHUB_OUTPUT
  deploy:
    runs-on: ubuntu-latest
    needs: environment
    steps:
     - uses: actions/checkout@v3
     - name: confirm version_name and version_code
       run: |
         echo "${{ needs.environment.outputs.GRADLE }}"
         echo "${{ needs.environment.outputs.SECRET }}"
         echo "$VERSION_NAME"
     - name: environment Release
       if: ${{ inputs.environment == 'RELEASE' }}
       run: echo "RELEASE environment"
     - name: environment Debug
       if: ${{ inputs.environment == 'DEBUG' }}
       run: echo "DEBUG environment"
#      - name: set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '11'
#          check-latest: true
#      - name: make gradlew executed
#        run: chmod +x ./gradlew
#      - name: set keystore
#        run: echo "$SECRET" | base64 -d > ./release.keystore
#        env:
#          SECRET: ${{ needs.environment.outputs.SECRET }}
#      - name: Build App Bundle
#        run: ./gradlew $ENV
#        env:
#          ENV: ${{ needs.environment.outputs.GRADLE }}
#      - name: deploygate
#        run: |
#          curl \
#             -H "Authorization: token ${{secrets.DEPLOYGATE_API_TOKEN}}" \
#             -F "file=@app/build/outputs/apk/prod/release/app-prod-release.apk" \
#             -F "message=test" \
#             -v "https://deploygate.com/api/users/${{ secrets.DEPLOYGATE_USER }}/apps"
#   notice:
#     runs-on: ubuntu-latest
#     needs: 
#       - deploy
#     steps:
#       - name: Send GitHub Action trigger data to Slack workflow
#         id: slack
#         uses: slackapi/slack-github-action@v1.23.0
#         with:
#           payload: |
#             {
#               "text": "github actions: status ${{ job.status}} : environment: ${{ env.ENVIRONMENT }}, versions: ${{ env.VERSION_NAME }} (${{ inputs.version_code }})"
#             }
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
